require 'spec_helper'
require 'sequel'
require_relative '../lib/modify_delayed_jobs'

describe ModifyDelayedJobs do
  let(:db) { Sequel.sqlite }
  subject  { described_class.new(db, double) }

  before do
    db.create_table :delayed_jobs do
      primary_key :id
      Integer :priority
      Integer :attempts
      String :handler, text: true
      String :last_error, text: true
      Time :run_at
      Time :locked_at
      Time :failed_at
      String :locked_by
      Time :created_at
      Time :updated_at
      String :queue
    end
  end

  it 'updates a19s' do
    insert "--- !ruby/struct:A19Job\norganization_key: ggzdrenthe\npatty_patient_id: 75192\n"
    subject.perform(increment: 1000000)
    expect(db[:delayed_jobs].count).to eq(0)
  end

  it 'deletes orus' do
    insert "--- !ruby/object:Delayed::PerformableMethod\nobject: !ruby/object:OruJob\n  organization_key: ggzfriesland\n  obj_class: Answer\n  obj_id: 467079\n  priority: 2\n  options:\n    :include_inactive: true\nmethod_name: :deliver_when_answer_expired_without_delay\nargs: []\n"
    subject.perform(increment: 1000000)
    expect(db[:delayed_jobs].count).to eq(0)
  end

  it 'updates fill out request callbacks' do
    insert "--- !ruby/struct:FillOutRequestCallbackJob\nfill_out_request_id: 45295\nevent: :expired\n"
    subject.perform(increment: 1000000)
    assert "--- !ruby/struct:FillOutRequestCallbackJob\nfill_out_request_id: 1045295\nevent: :expired\n"
  end

  it 'updates notification send jobs' do
    insert "--- !ruby/struct:NotificationSendJob\nprotocol_subscription_id: 1513\npending_answer_ids:\n- 219696\nnotifier: :hoe_gek_is_nl\nevent: :invitation_opened\n"
    subject.perform(increment: 1000000)
    assert "--- !ruby/struct:NotificationSendJob\nprotocol_subscription_id: 1001513\npending_answer_ids:\n- 1219696\nnotifier: :hoe_gek_is_nl\nevent: :invitation_opened\n"
  end

  it 'raises on webhook jobs' do
    insert "--- !ruby/struct:WebhookJob\ntype: :response\norganization_id: 1\nevent: response.status.completed\nobject: !ruby/object:Answer\n  raw_attributes:\n    id: 90340\n    label: \n    vals: \n    sttus: \n    scors: \n    params: \n    description: \n    protocol_id: 17\n    measurement_id: 29\n    completed_by: 6146\n    subject_id: 6146\n    questionnaire_id: 861\n    active: 1\n    archived: 0\n    owner_id: \n    created_at: &6 2015-05-13 12:13:25.000000000 Z\n    updated_at: &7 2015-05-13 13:49:55.000000000 Z\n    d_action: \n    outcome: \n    team_id: \n    first: 0\n    old_remote_id: \n    token: 3ddd41f967bd86c7\n    completed_at: &8 2015-05-13 12:20:03.000000000 Z\n    completed_by_type: Dossier\n    last_oru_status: \n    last_oru_sent_at: \n    project_serial: \n    fill_out_task_id: \n    respondent_type: patient_version\n    notes: \n    open_from: &9 2015-05-13 12:12:00.000000000 Z\n    open_till: &10 2015-05-13 13:12:00.000000000 Z\n    emailed_at: \n    fill_out_task_order: \n    labels: \n    remote_id: 90222\n    non_response_id: \n    aborted: 0\n    needs_outcome_regeneration: 0\n    requester_id: 109\n  attributes: !ruby/object:ActiveRecord::AttributeSet\n    attributes: !ruby/object:ActiveRecord::LazyAttributeHash\n      types:\n        id: &2 !ruby/object:ActiveRecord::Type::Integer\n          precision: \n          scale: \n          limit: 4\n          range: !ruby/range\n            begin: -2147483648\n            end: 2147483648\n            excl: true\n        label: &11 !ruby/object:ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter::MysqlString\n          precision: \n          scale: \n          limit: 40\n        vals: &1 !ruby/object:ActiveRecord::Type::Text\n          precision: \n          scale: \n          limit: 65535\n        sttus: *1\n        scors: *1\n        params: *1\n        description: &5 !ruby/object:ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter::MysqlString\n          precision: \n          scale: \n          limit: 255\n        protocol_id: *2\n        measurement_id: *2\n        completed_by: *2\n        subject_id: *2\n        questionnaire_id: *2\n        active: &3 !ruby/object:ActiveRecord::Type::Boolean\n          precision: \n          scale: \n          limit: 1\n        archived: *3\n        owner_id: *2\n        created_at: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: &4 !ruby/object:ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter::MysqlDateTime\n            precision: \n            scale: \n            limit: \n        updated_at: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: *4\n        d_action: *1\n        outcome: *1\n        team_id: *2\n        first: *3\n        old_remote_id: *5\n        token: *5\n        completed_at: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: *4\n        completed_by_type: *5\n        last_oru_status: &12 !ruby/object:ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter::MysqlString\n          precision: \n          scale: \n          limit: 1\n        last_oru_sent_at: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: *4\n        project_serial: *2\n        fill_out_task_id: *2\n        respondent_type: *5\n        notes: *1\n        open_from: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: *4\n        open_till: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: *4\n        emailed_at: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n          subtype: *4\n        fill_out_task_order: *2\n        labels: !ruby/object:ActiveRecord::Type::Serialized\n          coder: &13 !ruby/object:ActiveRecord::Coders::YAMLColumn\n            object_class: !ruby/class 'Array'\n          subtype: *1\n        remote_id: *2\n        non_response_id: *2\n        aborted: *3\n        needs_outcome_regeneration: *3\n        requester_id: *2\n      values:\n        id: 90340\n        label: \n        vals: \n        sttus: \n        scors: \n        params: \n        description: \n        protocol_id: 17\n        measurement_id: 29\n        completed_by: 6146\n        subject_id: 6146\n        questionnaire_id: 861\n        active: 1\n        archived: 0\n        owner_id: \n        created_at: *6\n        updated_at: *7\n        d_action: \n        outcome: \n        team_id: \n        first: 0\n        old_remote_id: \n        token: 3ddd41f967bd86c7\n        completed_at: *8\n        completed_by_type: Dossier\n        last_oru_status: \n        last_oru_sent_at: \n        project_serial: \n        fill_out_task_id: \n        respondent_type: patient_version\n        notes: \n        open_from: *9\n        open_till: *10\n        emailed_at: \n        fill_out_task_order: \n        labels: \n        remote_id: 90222\n        non_response_id: \n        aborted: 0\n        needs_outcome_regeneration: 0\n        requester_id: 109\n      additional_types: {}\n      materialized: true\n      delegate_hash:\n        id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: id\n          value_before_type_cast: 90340\n          type: *2\n          value: 90340\n        label: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: label\n          value_before_type_cast: \n          type: *11\n          value: \n        vals: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: vals\n          value_before_type_cast: \n          type: *1\n          value: \n        sttus: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: sttus\n          value_before_type_cast: \n          type: *1\n          value: \n        scors: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: scors\n          value_before_type_cast: \n          type: *1\n          value: \n        params: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: params\n          value_before_type_cast: \n          type: *1\n          value: \n        description: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: description\n          value_before_type_cast: \n          type: *5\n          value: \n        protocol_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: protocol_id\n          value_before_type_cast: 17\n          type: *2\n          value: 17\n        measurement_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: measurement_id\n          value_before_type_cast: 29\n          type: *2\n          value: 29\n        completed_by: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: completed_by\n          value_before_type_cast: 6146\n          type: *2\n          value: 6146\n        subject_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: subject_id\n          value_before_type_cast: 6146\n          type: *2\n          value: 6146\n        questionnaire_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: questionnaire_id\n          value_before_type_cast: 861\n          type: *2\n          value: 861\n        active: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: active\n          value_before_type_cast: 1\n          type: *3\n          value: true\n        archived: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: archived\n          value_before_type_cast: 0\n          type: *3\n          value: false\n        owner_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: owner_id\n          value_before_type_cast: \n          type: *2\n          value: \n        created_at: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: created_at\n          value_before_type_cast: *6\n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: *6\n        updated_at: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: updated_at\n          value_before_type_cast: *7\n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: *7\n        d_action: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: d_action\n          value_before_type_cast: \n          type: *1\n          value: \n        outcome: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: outcome\n          value_before_type_cast: \n          type: *1\n          value: \n        team_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: team_id\n          value_before_type_cast: \n          type: *2\n          value: \n        first: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: first\n          value_before_type_cast: 0\n          type: *3\n          value: false\n        old_remote_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: old_remote_id\n          value_before_type_cast: \n          type: *5\n          value: \n        token: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: token\n          value_before_type_cast: 3ddd41f967bd86c7\n          type: *5\n          value: 3ddd41f967bd86c7\n        completed_at: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: completed_at\n          value_before_type_cast: *8\n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: *8\n        completed_by_type: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: completed_by_type\n          value_before_type_cast: Dossier\n          type: *5\n          value: Dossier\n        last_oru_status: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: last_oru_status\n          value_before_type_cast: \n          type: *12\n          value: \n        last_oru_sent_at: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: last_oru_sent_at\n          value_before_type_cast: \n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: \n        project_serial: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: project_serial\n          value_before_type_cast: \n          type: *2\n          value: \n        fill_out_task_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: fill_out_task_id\n          value_before_type_cast: \n          type: *2\n          value: \n        respondent_type: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: respondent_type\n          value_before_type_cast: patient_version\n          type: *5\n          value: patient_version\n        notes: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: notes\n          value_before_type_cast: \n          type: *1\n          value: \n        open_from: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: open_from\n          value_before_type_cast: *9\n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: *9\n        open_till: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: open_till\n          value_before_type_cast: *10\n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: *10\n        emailed_at: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: emailed_at\n          value_before_type_cast: \n          type: !ruby/object:ActiveRecord::AttributeMethods::TimeZoneConversion::TimeZoneConverter\n            subtype: *4\n          value: \n        fill_out_task_order: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: fill_out_task_order\n          value_before_type_cast: \n          type: *2\n          value: \n        labels: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: labels\n          value_before_type_cast: \n          type: !ruby/object:ActiveRecord::Type::Serialized\n            coder: *13\n            subtype: *1\n          value: []\n        remote_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: remote_id\n          value_before_type_cast: 90222\n          type: *2\n          value: 90222\n        non_response_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: non_response_id\n          value_before_type_cast: \n          type: *2\n          value: \n        aborted: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: aborted\n          value_before_type_cast: 0\n          type: *3\n          value: false\n        needs_outcome_regeneration: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: needs_outcome_regeneration\n          value_before_type_cast: 0\n          type: *3\n          value: false\n        requester_id: !ruby/object:ActiveRecord::Attribute::FromDatabase\n          name: requester_id\n          value_before_type_cast: 109\n          type: *2\n          value: 109\n  new_record: false\n"
    expect { subject.perform(increment: 1000000) }.to raise_error
  end

  it 'raises if outcome regeneration is pending'


  def insert(handler)
    db[:delayed_jobs].insert(handler: handler)
  end

  def assert(handler)
    expect(db[:delayed_jobs].first[:handler]).to eq(handler)
  end
end
